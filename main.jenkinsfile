//===-*- Groovy -*-===

pipeline {
    parameters {
        string(name: 'CASE_NAME', defaultValue: '', description: 'Models should be rechecked under this version.')
        string(name: 'TOOLCHAIN', defaultValue: '', description: 'nntoolchain/tpu-mlir')
        string(name: 'TARGET', defaultValue: '', description: 'BM1684/BM1684X')
        string(name: 'COMMIT_SHA', defaultValue: '', description: 'Build the specific version of TPU-MLIR/NNTC .')
    }
    agent any
    environment {
        GIT_REPOSTORY_PATH = "/var/jenkins_home/git-repository"
        GERRIT_AC = credentials('gerrit-ac')
    }
    stages {
        stage('Information') {
            steps {
                println("case name: ${params.CASE_NAME}, toolchain selected: ${params.TOOLCHAIN}, target selected: ${params.TARGET}, toolchain version: ${params.COMMIT_SHA}")
            }
        }
        stage('CaseSplit') {
            steps {
                dir("$WORKSPACE") {
                    script {
                        for (def case_name : params.CASE_NAME.split()) {
                            println(case_name)
                            def b = build job: 'blame', parameters: [
                                    string(name: 'CASE_NAME', value: case_name),
                                    string(name: 'TOOLCHAIN', value: params.TOOLCHAIN),
                                    string(name: 'TARGET', value: params.TARGET),
                                    string(name: 'COMMIT_SHA', value: params.COMMIT_SHA),
                                    ], wait: true, propagate: false
                            def varb = b.getResult()
                            println(varb)
                        }
                    }
                }
            }
        }
    }
}
