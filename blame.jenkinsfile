//===-*- Groovy -*-===

pipeline {
    parameters {
        string(name: 'CASE_NAME', defaultValue: '', description: 'Case name of a single case.')
        string(name: 'TOOLCHAIN', defaultValue: '', description: 'NNTC/TPU-MLIR')
        string(name: 'TARGET', defaultValue: '', description: 'BM1684/BM1684X')
        string(name: 'COMMIT_SHA', defaultValue: '', description: 'Build the specific version of TPU-MLIR .')
    }
    agent {
        docker {
            image 'sophgo/tpuc_dev'
            label 'local'
        }
    }
    stages {
        stage('Information') {
            steps {
                println("case name: ${params.CASE_NAME}, toolchain selected: ${params.TOOLCHAIN}, target selected: ${params.TARGET}, toolchain version: ${params.COMMIT_SHA}")
            }
        }
        stage('Process') {
            steps {
                dir("$WORKSPACE") {
                    script {
                        sh """#!/bin/bash
                            set -e
                            pushd ${params.TOOLCHAIN}
                            git reset --hard ${params.COMMIT_SHA}
                        """
                        def commit_n_sha = sh(script: '''git log  --pretty=oneline -n 30 --pretty=format:\"%h\"''', returnStdout: true)
                        def commit_n = commit_n_sha.split("\n")
                        for (def cmt_id : commit_n) {
                            try {
                                println("try")
                            } catch (err) {
                                println("catched failer, COMMIT_SHA: ${cmt_id}")
                                println(err)
                                break;
                            }
                        }
                    }
                }
            }
        }
    }
}